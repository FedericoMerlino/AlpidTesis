@model Paginacion<Alpid.Models.EventoSolidarios>

@{
    ViewData["Title"] = "Eventos solidarios";
}
<html>
<body>
    <h1 style="color:blue">Eventos solidarios</h1>
    <div style="padding-bottom:3%; padding-top:1%;">
        <!--Boton para crear nuevo evento-->
        <a asp-action="Create" class="btn btn-success">Nuevo evento</a>
        <!--Busca solamente la info que se muestra en la grilla-->

        <i class="fa fa-search fa-2x" style="Float: right; padding-left:10px; padding-top:2px;"></i>
        <input id="searchTerm" type="text" onkeyup="doSearch()" class="form-control" placeholder="Buscar" style=" width:200px; Float: right; " />
    </div>
    <!--tabla con la informacion de los eventos solidarios-->
    <div>
        <form class="form-group">
            <table class="table table-responsive-sm" id="datos">
                <thead>
                    <tr>
                        <th>
                            Fecha
                        </th>
                        <th>
                            Nombre Evento
                        </th>
                        <th>
                            Ingreso Total
                        </th>
                        <th>
                            Salida Total
                        </th>
                        <th>
                            Total
                        </th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Fecha)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NombreEvento)
                            </td>
                            <td>
                                @if (item.Ingreso != null)
                                {
                                    <span>$ </span> @Html.DisplayFor(modelItem => item.Ingreso)
                                }
                            </td>
                            <td>
                                @if (item.Salida != null)
                                {
                                    <span>$ </span> @Html.DisplayFor(modelItem => item.Salida)
                                }
                            </td>
                            <td>
                                @if (item.Total != null)
                                {
                                    <span>$ </span> @Html.DisplayFor(modelItem => item.Total)
                                }
                            </td>
                            <td>
                                <a asp-action="Details" class="btn btn-info" asp-route-id="@item.Id">Ver</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <!--paginacion sobre los valores que se muestran-->
            <div style="float:right; padding-bottom: 30px;">
                @{
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                }
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-page="@(Model.PageIndex - 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default @prevDisabled">
                    Anterior
                </a>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-page="@i"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="btn btn-default">
                        @i
                    </a>
                }
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CurrentSort"]"
                   asp-route-page="@(Model.PageIndex + 1)"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="btn btn-default @nextDisabled">
                    Siguiente
                </a>
            </div>
        </form>
    </div>

</body>
</html>